1. Erstelle eine simple Projektstruktur
Siehe http://requirejs.org/docs/optimization.html
Das "appdirectory" wird hier als "h5e" bennant, ganz kurz für html5experience.

h5e
	main.html
	css
		common.css
		main.css
	scripts
		require.js
		main.js		
r.js (The r.js optimizer from download page)




2. Ersten Optimizer Durchlauf durchführen
Siehe http://requirejs.org/docs/optimization.html#onejs

node ../../r.js -o name=main out=main-built.js baseUrl=.

Der erste Versuch schlägt fehlt, denn ist es eine falsche "nodejs" Version installiert. 
Ubuntu hat wohl eine zu alte Version, also per Hand:

sudo apt-get install git-core curl build-essential openssl libssl-dev
git clone https://github.com/joyent/node.git && cd node
./configure
make
sudo make install
node -v
curl http://npmjs.org/install.sh | sudo sh
npm -v

Zur Steuerung des Bauens ist die Datei "app.build.js" verantwortlich.


3. JSON Schema Unterstützung 
Siehe http://code.google.com/p/jsonschema/

Die B-Versionen scheinen laut Testdatei nicht zu funktionieren, daher die ältere "jsonschema.js".
Die Datei "schema" ist das "Schema für JSON Schema".




4. Pub/Sub Unterstützung
Siehe http://weblog.bocoup.com/publishsubscribe-with-jquery-custom-events

Simpelstes Framework für Publish-Subscribe. Kann/Soll für eigene Zwecke angepasst werden (z.B. differenziertere Topicauswahl).
Soll laut Blog um Faktor 10x schneller sein als JQuery Events. 
Das Script "has.js" ist eine Empfehlung des PubSub-Team, der Einsatz im Projekt ist noch fraglich.


TODO: 99 Cache Manifest zufügen
...
